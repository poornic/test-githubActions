name: Create Repositories from JSON

on:
  workflow_dispatch:

jobs:
  create_repos:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4

    - name: Parse JSON and create repos
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        echo "Parsing repos.json..."

        # Read all JSON objects into array
        mapfile -t repos < <(jq -c '.[]' .github/workflows/repos.json)

        # Set global Git config
        git config --global user.name "poornic"
        git config --global user.email "poornic22@gmail.com"

        for repo in "${repos[@]}"; do
          name=$(echo "$repo" | jq -r '.name')
          description=$(echo "$repo" | jq -r '.description')
          private=$(echo "$repo" | jq -r '.private')
          auto_init=$(echo "$repo" | jq -r '.auto_init')

          echo "Creating repository: $name"

          # Create repo
          response=$(curl -s -X POST https://api.github.com/user/repos \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -d @- <<EOF
          {
            "name": "$name",
            "description": "$description",
            "private": $private,
            "auto_init": $auto_init
          }
        EOF
          )

          # Get the clone URL
          clone_url=$(echo "$response" | jq -r '.clone_url')
          echo "clone url : $clone_url"

          if [[ "$clone_url" == "null" ]]; then
            echo "❌ Failed to create $name: $(echo "$response" | jq -r '.message')"
            continue
          fi

          echo "✅ Created $name, cloning..."

          auth_url=$(echo "$clone_url" | sed "s#https://#https://${GH_TOKEN}@#")

          # Clone repo
          git clone "$auth_url"
          cd "$name"

          # Only create release branch if auto_init is true (i.e., repo has at least 1 commit)
          if [[ "$auto_init" == "true" ]]; then
            git config --global user.name "poornic"
            git config --global user.email "poornic22@gmail.com"
            git checkout -b release
            git push origin release
            echo "✅ Created release branch for $name"
          else
            echo "⚠️ Skipping release branch for $name (no initial commit)"
          fi

          cd ..
          rm -rf "$name"
        done
